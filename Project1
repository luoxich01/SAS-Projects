%let StateName=Hawaii;
%let path=/folders/myfolders/ECRB94/data;
libname tsa "&path";
*let columns imported follow SAS naming conventions;
options validvarname=v7;

proc import datafile="&path/TSAClaims2002_2017.csv" dbms=csv 
		out=tsa.ClaimsImport replace;
	* use every row to guess a type of column, 
	since a lot of missing value in the columns, 
	so this step could ensure to use every row it can to determine the correct type of column;
	guessingrows=max;
run;

/* explore data */

proc print data=tsa.ClaimsImport(obs=20);
run;

* varnum is to see the column names listed in the order as 
they are in the table instead of in alphabet;
* also, this step helps to see the format for each column and 
decide which should be fixed later;
proc contents data=tsa.ClaimsImport varnum;
run;

* Frequency Procedure is used to explore categorical features;
proc freq data=tsa.ClaimsImport;
	tables Claim_Site Disposition Claim_Type Date_Received Incident_Date/nocum 
		nopercent;
	format Incident_Date Date_Received year4.;
run;

proc print data=tsa.ClaimsImport;
    where Date_Received<Incident_Date;
    format Date_Received Incident_Date date9.;
run;

/* prepare data */

/*1. remove duplicate rows.*/
proc sort data=tsa.ClaimsImport
    out=tsa.Claims_NoDups noduprecs; *remove adjacent rows that are completely the same;
    by _all_;
run;
/*2. sort the data by ascending Incident_Date.*/
proc sort data=tsa.Claims_NoDups; 
    by Incident_Date;
run;
data tsa.claims_cleaned;
    set tsa.claims_nodups;
/*3. Clean the Claim_Site column.*/
    if Claim_Site in ('-','') then Claim_Site='Unknown';
/*4. Clean the Disposition column.*/
    if Disposition in ('-','') then Disposition='Unknown';
    else if Disposition='losed: Contractor Claim' then Disposition='Closed:Contractor Claim';
    else if Disposition='Closed: Canceled' then Disposition='Closed:Canceled';   
/*5. Clean the Claim_Type column.*/
    if Claim_Type in ('-','') then Claim_Type='Unknown';
    else if Claim_Type='Passenger Property Loss/Personal Injur' then Claim_Type='Passenger Property Loss';
    else if Claim_Type='Passenger Property Loss/Personal Injury' then Claim_Type='Passenger Property Loss';
    else if Claim_Type='Property Damage/Personal Injury' then Claim_Type='Property Damage';
    
    *find("/", Claim_Type) ne 0 then
		Claim_Type=substr(Claim_Type, 1, find("/", Claim_Type)-1);
	
/*6. Convert all State values to uppercase and all StateName values to proper case.*/
    State=upcase(State);
    StateName=propcase(StateName);
/*7. Create a new column to indicate date issues.*/
    if (Incident_Date > Date_Received or
        Date_Received =. or
        Incident_Date =. or
        year(Date_Received) < 2002 or
        year(Date_Received) > 2017 or
        year(Incident_Date) < 2002 or
        year(Incident_Date) > 2017) then Date_Issues='Needs Review';    
/*8. Add permanent labels and formats.*/
    format Incident_Date Date_Received date9. Close_Amount dollar20.2;

    label Claim_Number="Claim Number" 
          Date_Received="Date Received" 
		  Incident_Date="Incident Date" 
		  Date_Issues="Date Issues" 
		  Airport_Code="Airport Code" 
		  Airport_Name="Airport Name" 
		  Claim_Type="Claim Type" 
		  Claim_Site="Claim Site" 
		  Item_Category="Item Category" 
		  Close_Amount="Close Amount";		
/*9. Drop County and City.*/
    drop County City;   
run;

proc freq data=tsa.claims_cleaned order=freq;
    tables Claim_Site
           Disposition
           Claim_Type
           Date_Issues/nopercent nocum;
run;

/* overall analysis */

/*1. How many date issues are in the overall data?*/
title "Overall Date Issues in the Data";
proc freq data=tsa.claims_cleaned;
    tables Date_Issues/missing nocum nopercent;
    *missing option treats missing value as valid;
run;
title;

/*2. How many claims per year of Incident_Date are in the overall data? (with plot)*/
ods graphics on;
title "Overall Claims by Year";
proc freq data=tsa.claims_cleaned;
    table Incident_Date/nocum nopercent plots=freqplot;
    format Incident_Date year4.;
    where Date_Issues is null; 
    *only the date without date issues would be included in the procedure;
run;
title;

/* specific state analysis */

/*a. what are the frequency values for Claim_Type for the selected state?*/
/*b. what are the frequency values for Claim_Site for the selected state?*/
/*c. what are the frequency values for Disposition for the selected state?*/
title "&StateName Claim Types, Claim Sites and Disposition";
proc freq data=tsa.claims_cleaned order=freq;
    tables Claim_Type Claim_Site Disposition/nocum nopercent;
    where StateName="&StateName" and Date_Issues is null;
run;
title;

/*d. What's the mean, minimum, maximum, and sum of Close_Amount for the selected
state? Round to the nearest integer.*/
title "Close Amount Statistics for &StateName";
proc means data=tsa.claims_cleaned mean min max sum maxdec=0;
    var Close_Amount;
    where StateName="&StateName" and Date_Issues is null;
run;
title;
